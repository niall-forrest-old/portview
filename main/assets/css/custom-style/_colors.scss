:root, [data-theme="default"] {
  // main
  @include defineColorHSL(--color-primary-darker, 228, 46%, 13%);
  @include defineColorHSL(--color-primary-dark, 228, 46%, 23%);
  @include defineColorHSL(--color-primary, 228, 46%, 33%);
  @include defineColorHSL(--color-primary-light, 228, 46%, 43%);
  @include defineColorHSL(--color-primary-lighter, 228, 46%, 53%);

  @include defineColorHSL(--color-accent-darker, 213, 4%, 39%);
  @include defineColorHSL(--color-accent-dark, 213, 4%, 49%);
  @include defineColorHSL(--color-accent, 213, 4%, 59%);
  @include defineColorHSL(--color-accent-light, 213, 4%, 69%);
  @include defineColorHSL(--color-accent-lighter, 213, 4%, 79%);

  @include defineColorHSL(--color-red-darker, 338, 64%, 4%);
  @include defineColorHSL(--color-red-dark, 338, 64%, 14%);
  @include defineColorHSL(--color-red, 338, 64%, 24%);
  @include defineColorHSL(--color-red-light, 338, 64%, 34%);
  @include defineColorHSL(--color-red-lighter, 338, 64%, 44%);

  @include defineColorHSL(--color-orange-darker, 12, 67%, 39%);
  @include defineColorHSL(--color-orange-dark, 12, 67%, 49%);
  @include defineColorHSL(--color-orange, 12, 67%, 59%);
  @include defineColorHSL(--color-orange-light, 12, 67%, 69%);
  @include defineColorHSL(--color-orange-lighter, 12, 67%, 79%);

  @include defineColorHSL(--color-pink-darker, 338, 45%, 56%);
  @include defineColorHSL(--color-pink-dark, 338, 45%, 66%);
  @include defineColorHSL(--color-pink, 338, 45%, 76%);
  @include defineColorHSL(--color-pink-light, 338, 45%, 86%);
  @include defineColorHSL(--color-pink-lighter, 338, 45%, 96%);

  @include defineColorHSL(--color-yellow-darker, 49, 74%, 41%);
  @include defineColorHSL(--color-yellow-dark, 49, 74%, 51%);
  @include defineColorHSL(--color-yellow, 49, 74%, 61%);
  @include defineColorHSL(--color-yellow-light, 49, 74%, 71%);
  @include defineColorHSL(--color-yellow-lighter, 49, 74%, 81%);

  @include defineColorHSL(--color-green-darker, 138, 27%, 2%);
  @include defineColorHSL(--color-green-dark, 138, 27%, 12%);
  @include defineColorHSL(--color-green, 138, 27%, 22%);
  @include defineColorHSL(--color-green-light, 138, 27%, 32%);
  @include defineColorHSL(--color-green-lighter, 138, 27%, 42%);

  @include defineColorHSL(--color-black, 240, 8%, 12%);
  @include defineColorHSL(--color-white, 0, 0%, 100%);

  // feedback
  @include defineColorHSL(--color-warning-darker, 46, 100%, 47%);
  @include defineColorHSL(--color-warning-dark, 46, 100%, 50%);
  @include defineColorHSL(--color-warning, 46, 100%, 61%);
  @include defineColorHSL(--color-warning-light, 46, 100%, 71%);
  @include defineColorHSL(--color-warning-lighter, 46, 100%, 80%);

  @include defineColorHSL(--color-success-darker, 94, 48%, 42%);
  @include defineColorHSL(--color-success-dark, 94, 48%, 48%);
  @include defineColorHSL(--color-success, 94, 48%, 56%);
  @include defineColorHSL(--color-success-light, 94, 48%, 65%);
  @include defineColorHSL(--color-success-lighter, 94, 48%, 74%);

  @include defineColorHSL(--color-error-darker, 349, 75%, 36%);
  @include defineColorHSL(--color-error-dark, 349, 75%, 44%);
  @include defineColorHSL(--color-error, 349, 75%, 51%);
  @include defineColorHSL(--color-error-light, 349, 75%, 59%);
  @include defineColorHSL(--color-error-lighter, 349, 75%, 67%);

  // color contrasts
  @include defineColorHSL(--color-bg, 0, 0%, 100%);
  @include defineColorHSL(--color-contrast-lower, 0, 0%, 95%);
  @include defineColorHSL(--color-contrast-low, 240, 1%, 83%);
  @include defineColorHSL(--color-contrast-medium, 240, 1%, 48%);
  @include defineColorHSL(--color-contrast-high, 240, 4%, 20%);
  @include defineColorHSL(--color-contrast-higher, 240, 8%, 12%);
}

// background-color
.bg-red-darker { background-color: alpha(var(--color-red-darker), var(--bg-o, 1)); }
.bg-red-dark { background-color: alpha(var(--color-red-dark), var(--bg-o, 1)); }
.bg-red { background-color: alpha(var(--color-red), var(--bg-o, 1)); }
.bg-red-light { background-color: alpha(var(--color-red-light), var(--bg-o, 1)); }
.bg-red-lighter { background-color: alpha(var(--color-red-lighter), var(--bg-o, 1)); }
.bg-orange-darker { background-color: alpha(var(--color-orange-darker), var(--bg-o, 1)); }
.bg-orange-dark { background-color: alpha(var(--color-orange-dark), var(--bg-o, 1)); }
.bg-orange { background-color: alpha(var(--color-orange), var(--bg-o, 1)); }
.bg-orange-light { background-color: alpha(var(--color-orange-light), var(--bg-o, 1)); }
.bg-orange-lighter { background-color: alpha(var(--color-orange-lighter), var(--bg-o, 1)); }
.bg-pink-darker { background-color: alpha(var(--color-pink-darker), var(--bg-o, 1)); }
.bg-pink-dark { background-color: alpha(var(--color-pink-dark), var(--bg-o, 1)); }
.bg-pink { background-color: alpha(var(--color-pink), var(--bg-o, 1)); }
.bg-pink-light { background-color: alpha(var(--color-pink-light), var(--bg-o, 1)); }
.bg-pink-lighter { background-color: alpha(var(--color-pink-lighter), var(--bg-o, 1)); }
.bg-yellow-darker { background-color: alpha(var(--color-yellow-darker), var(--bg-o, 1)); }
.bg-yellow-dark { background-color: alpha(var(--color-yellow-dark), var(--bg-o, 1)); }
.bg-yellow { background-color: alpha(var(--color-yellow), var(--bg-o, 1)); }
.bg-yellow-light { background-color: alpha(var(--color-yellow-light), var(--bg-o, 1)); }
.bg-yellow-lighter { background-color: alpha(var(--color-yellow-lighter), var(--bg-o, 1)); }
.bg-green-darker { background-color: alpha(var(--color-green-darker), var(--bg-o, 1)); }
.bg-green-dark { background-color: alpha(var(--color-green-dark), var(--bg-o, 1)); }
.bg-green { background-color: alpha(var(--color-green), var(--bg-o, 1)); }
.bg-green-light { background-color: alpha(var(--color-green-light), var(--bg-o, 1)); }
.bg-green-lighter { background-color: alpha(var(--color-green-lighter), var(--bg-o, 1)); }

// border-color
.border-red-darker { border-color: alpha(var(--color-red-darker), var(--bg-o, 1)); }
.border-red-dark { border-color: alpha(var(--color-red-dark), var(--bg-o, 1)); }
.border-red { border-color: alpha(var(--color-red), var(--bg-o, 1)); }
.border-red-light { border-color: alpha(var(--color-red-light), var(--bg-o, 1)); }
.border-red-lighter { border-color: alpha(var(--color-red-lighter), var(--bg-o, 1)); }
.border-orange-darker { border-color: alpha(var(--color-orange-darker), var(--bg-o, 1)); }
.border-orange-dark { border-color: alpha(var(--color-orange-dark), var(--bg-o, 1)); }
.border-orange { border-color: alpha(var(--color-orange), var(--bg-o, 1)); }
.border-orange-light { border-color: alpha(var(--color-orange-light), var(--bg-o, 1)); }
.border-orange-lighter { border-color: alpha(var(--color-orange-lighter), var(--bg-o, 1)); }
.border-pink-darker { border-color: alpha(var(--color-pink-darker), var(--bg-o, 1)); }
.border-pink-dark { border-color: alpha(var(--color-pink-dark), var(--bg-o, 1)); }
.border-pink { border-color: alpha(var(--color-pink), var(--bg-o, 1)); }
.border-pink-light { border-color: alpha(var(--color-pink-light), var(--bg-o, 1)); }
.border-pink-lighter { border-color: alpha(var(--color-pink-lighter), var(--bg-o, 1)); }
.border-yellow-darker { border-color: alpha(var(--color-yellow-darker), var(--bg-o, 1)); }
.border-yellow-dark { border-color: alpha(var(--color-yellow-dark), var(--bg-o, 1)); }
.border-yellow { border-color: alpha(var(--color-yellow), var(--bg-o, 1)); }
.border-yellow-light { border-color: alpha(var(--color-yellow-light), var(--bg-o, 1)); }
.border-yellow-lighter { border-color: alpha(var(--color-yellow-lighter), var(--bg-o, 1)); }
.border-green-darker { border-color: alpha(var(--color-green-darker), var(--bg-o, 1)); }
.border-green-dark { border-color: alpha(var(--color-green-dark), var(--bg-o, 1)); }
.border-green { border-color: alpha(var(--color-green), var(--bg-o, 1)); }
.border-green-light { border-color: alpha(var(--color-green-light), var(--bg-o, 1)); }
.border-green-lighter { border-color: alpha(var(--color-green-lighter), var(--bg-o, 1)); }